#include <iostream>
#define MAXSIZE 20
using namespace std;

typedef struct {
	int data[MAXSIZE] = { 1,1,3,4,6,6,6,7,7,7,7,9,10 };
	int length = 13;
}SqList;
//因为是有序顺序表，所以只需判断元素和其前后是否相等，仍可以用k
void DeleteSameElement(SqList &L) {
	int k = 0;
	for (int i = 1; i < L.length; i++) {		//从第二个元素开始
		if (L.data[i] == L.data[i - 1]) {			//一开始没用==，出了bug
			k++;
		}
		else
			L.data[i - k] = L.data[i];
	}
	L.length = L.length - k;
}
int main() {
	SqList L;
	cout << "Before" << endl;
	for (int i = 0; i < L.length; i++) {
		cout << L.data[i] << " ";
	}
	cout << endl;
	DeleteSameElement(L);
	cout << "After" << endl;
	for (int j = 0; j < L.length; j++) {
		cout << L.data[j] << " ";
	}
}
//王道书方法：
bool Delete_Same(SqList &L) {
	if (L.length == 0)
		return false;
	int i.j;
	for (i = 0, j = 1; j < L.length; j++) {
		if (L.data[i] != L.data[j])
			L.data[++i] = L.data[j];
		L.length = i + 1;
	}
	return true;
}
